// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.11.4
// source: proto/track.proto

package trackpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email  string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Mobile string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Duration int64  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Label    string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{1}
}

func (x *Activity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Activity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Activity) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Activity) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type CreateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // User id blank
}

func (x *CreateUserReq) Reset() {
	*x = CreateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReq) ProtoMessage() {}

func (x *CreateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReq.ProtoReflect.Descriptor instead.
func (*CreateUserReq) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUserReq) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type CreateUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // User id filled in
}

func (x *CreateUserRes) Reset() {
	*x = CreateUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRes) ProtoMessage() {}

func (x *CreateUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRes.ProtoReflect.Descriptor instead.
func (*CreateUserRes) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUserRes) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ReadUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadUserReq) Reset() {
	*x = ReadUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadUserReq) ProtoMessage() {}

func (x *ReadUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadUserReq.ProtoReflect.Descriptor instead.
func (*ReadUserReq) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{4}
}

func (x *ReadUserReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReadUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ReadUserRes) Reset() {
	*x = ReadUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadUserRes) ProtoMessage() {}

func (x *ReadUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadUserRes.ProtoReflect.Descriptor instead.
func (*ReadUserRes) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{5}
}

func (x *ReadUserRes) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ListUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUsersReq) Reset() {
	*x = ListUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersReq) ProtoMessage() {}

func (x *ListUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersReq.ProtoReflect.Descriptor instead.
func (*ListUsersReq) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{6}
}

type ListUsersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ListUsersRes) Reset() {
	*x = ListUsersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRes) ProtoMessage() {}

func (x *ListUsersRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRes.ProtoReflect.Descriptor instead.
func (*ListUsersRes) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{7}
}

func (x *ListUsersRes) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type CreateActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity *Activity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"` // Activity id blank
}

func (x *CreateActivityReq) Reset() {
	*x = CreateActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivityReq) ProtoMessage() {}

func (x *CreateActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivityReq.ProtoReflect.Descriptor instead.
func (*CreateActivityReq) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{8}
}

func (x *CreateActivityReq) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

type CreateActivityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity *Activity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"` // Activity id filled in
}

func (x *CreateActivityRes) Reset() {
	*x = CreateActivityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivityRes) ProtoMessage() {}

func (x *CreateActivityRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivityRes.ProtoReflect.Descriptor instead.
func (*CreateActivityRes) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{9}
}

func (x *CreateActivityRes) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

type IsBoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IsBoolReq) Reset() {
	*x = IsBoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBoolReq) ProtoMessage() {}

func (x *IsBoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBoolReq.ProtoReflect.Descriptor instead.
func (*IsBoolReq) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{10}
}

func (x *IsBoolReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type IsBoolRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *IsBoolRes) Reset() {
	*x = IsBoolRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBoolRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBoolRes) ProtoMessage() {}

func (x *IsBoolRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBoolRes.ProtoReflect.Descriptor instead.
func (*IsBoolRes) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{11}
}

func (x *IsBoolRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type IsValidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IsValidReq) Reset() {
	*x = IsValidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsValidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsValidReq) ProtoMessage() {}

func (x *IsValidReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsValidReq.ProtoReflect.Descriptor instead.
func (*IsValidReq) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{12}
}

func (x *IsValidReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type IsValidRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *IsValidRes) Reset() {
	*x = IsValidRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsValidRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsValidRes) ProtoMessage() {}

func (x *IsValidRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsValidRes.ProtoReflect.Descriptor instead.
func (*IsValidRes) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{13}
}

func (x *IsValidRes) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type UpdateActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity *Activity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *UpdateActivityReq) Reset() {
	*x = UpdateActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivityReq) ProtoMessage() {}

func (x *UpdateActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivityReq.ProtoReflect.Descriptor instead.
func (*UpdateActivityReq) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateActivityReq) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

type UpdateActivityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity *Activity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *UpdateActivityRes) Reset() {
	*x = UpdateActivityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivityRes) ProtoMessage() {}

func (x *UpdateActivityRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivityRes.ProtoReflect.Descriptor instead.
func (*UpdateActivityRes) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateActivityRes) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

type ListActivitysReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListActivitysReq) Reset() {
	*x = ListActivitysReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActivitysReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivitysReq) ProtoMessage() {}

func (x *ListActivitysReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivitysReq.ProtoReflect.Descriptor instead.
func (*ListActivitysReq) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{16}
}

type ListActivitysRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity *Activity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *ListActivitysRes) Reset() {
	*x = ListActivitysRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_track_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActivitysRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivitysRes) ProtoMessage() {}

func (x *ListActivitysRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivitysRes.ProtoReflect.Descriptor instead.
func (*ListActivitysRes) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{17}
}

func (x *ListActivitysRes) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

var File_proto_track_proto protoreflect.FileDescriptor

var file_proto_track_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x22, 0x58, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x22, 0x60, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x30, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x30, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x1d, 0x0a, 0x0b, 0x52, 0x65,
	0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x0b, 0x52, 0x65, 0x61,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x0e, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x22, 0x2f, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x2b, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x40, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x1b,
	0x0a, 0x09, 0x49, 0x73, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x09, 0x49,
	0x73, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x1c, 0x0a, 0x0a, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22,
	0x0a, 0x0a, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x22, 0x40, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x22, 0x40, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x73, 0x52, 0x65, 0x71, 0x22, 0x3f, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x73, 0x52, 0x65, 0x73, 0x12, 0x2b,
	0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x32, 0xe5, 0x03, 0x0a, 0x0c,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x43, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x73,
	0x12, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x73, 0x52,
	0x65, 0x73, 0x30, 0x01, 0x12, 0x2c, 0x0a, 0x06, 0x49, 0x73, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x10,
	0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x73, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x73, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x11, 0x2e,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x52, 0x65, 0x73, 0x42, 0x09, 0x5a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_track_proto_rawDescOnce sync.Once
	file_proto_track_proto_rawDescData = file_proto_track_proto_rawDesc
)

func file_proto_track_proto_rawDescGZIP() []byte {
	file_proto_track_proto_rawDescOnce.Do(func() {
		file_proto_track_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_track_proto_rawDescData)
	})
	return file_proto_track_proto_rawDescData
}

var file_proto_track_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_track_proto_goTypes = []interface{}{
	(*User)(nil),              // 0: track.User
	(*Activity)(nil),          // 1: track.Activity
	(*CreateUserReq)(nil),     // 2: track.CreateUserReq
	(*CreateUserRes)(nil),     // 3: track.CreateUserRes
	(*ReadUserReq)(nil),       // 4: track.ReadUserReq
	(*ReadUserRes)(nil),       // 5: track.ReadUserRes
	(*ListUsersReq)(nil),      // 6: track.ListUsersReq
	(*ListUsersRes)(nil),      // 7: track.ListUsersRes
	(*CreateActivityReq)(nil), // 8: track.CreateActivityReq
	(*CreateActivityRes)(nil), // 9: track.CreateActivityRes
	(*IsBoolReq)(nil),         // 10: track.IsBoolReq
	(*IsBoolRes)(nil),         // 11: track.IsBoolRes
	(*IsValidReq)(nil),        // 12: track.IsValidReq
	(*IsValidRes)(nil),        // 13: track.IsValidRes
	(*UpdateActivityReq)(nil), // 14: track.UpdateActivityReq
	(*UpdateActivityRes)(nil), // 15: track.UpdateActivityRes
	(*ListActivitysReq)(nil),  // 16: track.ListActivitysReq
	(*ListActivitysRes)(nil),  // 17: track.ListActivitysRes
}
var file_proto_track_proto_depIdxs = []int32{
	0,  // 0: track.CreateUserReq.user:type_name -> track.User
	0,  // 1: track.CreateUserRes.user:type_name -> track.User
	0,  // 2: track.ReadUserRes.user:type_name -> track.User
	0,  // 3: track.ListUsersRes.user:type_name -> track.User
	1,  // 4: track.CreateActivityReq.activity:type_name -> track.Activity
	1,  // 5: track.CreateActivityRes.activity:type_name -> track.Activity
	1,  // 6: track.UpdateActivityReq.activity:type_name -> track.Activity
	1,  // 7: track.UpdateActivityRes.activity:type_name -> track.Activity
	1,  // 8: track.ListActivitysRes.activity:type_name -> track.Activity
	2,  // 9: track.TrackService.CreateUser:input_type -> track.CreateUserReq
	4,  // 10: track.TrackService.ReadUser:input_type -> track.ReadUserReq
	6,  // 11: track.TrackService.ListUsers:input_type -> track.ListUsersReq
	8,  // 12: track.TrackService.CreateActivity:input_type -> track.CreateActivityReq
	14, // 13: track.TrackService.UpdateActivity:input_type -> track.UpdateActivityReq
	16, // 14: track.TrackService.ListActivitys:input_type -> track.ListActivitysReq
	10, // 15: track.TrackService.IsBool:input_type -> track.IsBoolReq
	12, // 16: track.TrackService.IsValid:input_type -> track.IsValidReq
	3,  // 17: track.TrackService.CreateUser:output_type -> track.CreateUserRes
	5,  // 18: track.TrackService.ReadUser:output_type -> track.ReadUserRes
	7,  // 19: track.TrackService.ListUsers:output_type -> track.ListUsersRes
	9,  // 20: track.TrackService.CreateActivity:output_type -> track.CreateActivityRes
	15, // 21: track.TrackService.UpdateActivity:output_type -> track.UpdateActivityRes
	17, // 22: track.TrackService.ListActivitys:output_type -> track.ListActivitysRes
	11, // 23: track.TrackService.IsBool:output_type -> track.IsBoolRes
	13, // 24: track.TrackService.IsValid:output_type -> track.IsValidRes
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_track_proto_init() }
func file_proto_track_proto_init() {
	if File_proto_track_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_track_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBoolRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsValidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsValidRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActivitysReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_track_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActivitysRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_track_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_track_proto_goTypes,
		DependencyIndexes: file_proto_track_proto_depIdxs,
		MessageInfos:      file_proto_track_proto_msgTypes,
	}.Build()
	File_proto_track_proto = out.File
	file_proto_track_proto_rawDesc = nil
	file_proto_track_proto_goTypes = nil
	file_proto_track_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TrackServiceClient is the client API for TrackService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrackServiceClient interface {
	CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserRes, error)
	ReadUser(ctx context.Context, in *ReadUserReq, opts ...grpc.CallOption) (*ReadUserRes, error)
	ListUsers(ctx context.Context, in *ListUsersReq, opts ...grpc.CallOption) (TrackService_ListUsersClient, error)
	CreateActivity(ctx context.Context, in *CreateActivityReq, opts ...grpc.CallOption) (*CreateActivityRes, error)
	// rpc ReadActivity(ReadActivityReq) returns (ReadActivityRes);
	UpdateActivity(ctx context.Context, in *UpdateActivityReq, opts ...grpc.CallOption) (*UpdateActivityRes, error)
	ListActivitys(ctx context.Context, in *ListActivitysReq, opts ...grpc.CallOption) (TrackService_ListActivitysClient, error)
	IsBool(ctx context.Context, in *IsBoolReq, opts ...grpc.CallOption) (*IsBoolRes, error)
	IsValid(ctx context.Context, in *IsValidReq, opts ...grpc.CallOption) (*IsValidRes, error)
}

type trackServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTrackServiceClient(cc grpc.ClientConnInterface) TrackServiceClient {
	return &trackServiceClient{cc}
}

func (c *trackServiceClient) CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserRes, error) {
	out := new(CreateUserRes)
	err := c.cc.Invoke(ctx, "/track.TrackService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackServiceClient) ReadUser(ctx context.Context, in *ReadUserReq, opts ...grpc.CallOption) (*ReadUserRes, error) {
	out := new(ReadUserRes)
	err := c.cc.Invoke(ctx, "/track.TrackService/ReadUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackServiceClient) ListUsers(ctx context.Context, in *ListUsersReq, opts ...grpc.CallOption) (TrackService_ListUsersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TrackService_serviceDesc.Streams[0], "/track.TrackService/ListUsers", opts...)
	if err != nil {
		return nil, err
	}
	x := &trackServiceListUsersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TrackService_ListUsersClient interface {
	Recv() (*ListUsersRes, error)
	grpc.ClientStream
}

type trackServiceListUsersClient struct {
	grpc.ClientStream
}

func (x *trackServiceListUsersClient) Recv() (*ListUsersRes, error) {
	m := new(ListUsersRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *trackServiceClient) CreateActivity(ctx context.Context, in *CreateActivityReq, opts ...grpc.CallOption) (*CreateActivityRes, error) {
	out := new(CreateActivityRes)
	err := c.cc.Invoke(ctx, "/track.TrackService/CreateActivity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackServiceClient) UpdateActivity(ctx context.Context, in *UpdateActivityReq, opts ...grpc.CallOption) (*UpdateActivityRes, error) {
	out := new(UpdateActivityRes)
	err := c.cc.Invoke(ctx, "/track.TrackService/UpdateActivity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackServiceClient) ListActivitys(ctx context.Context, in *ListActivitysReq, opts ...grpc.CallOption) (TrackService_ListActivitysClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TrackService_serviceDesc.Streams[1], "/track.TrackService/ListActivitys", opts...)
	if err != nil {
		return nil, err
	}
	x := &trackServiceListActivitysClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TrackService_ListActivitysClient interface {
	Recv() (*ListActivitysRes, error)
	grpc.ClientStream
}

type trackServiceListActivitysClient struct {
	grpc.ClientStream
}

func (x *trackServiceListActivitysClient) Recv() (*ListActivitysRes, error) {
	m := new(ListActivitysRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *trackServiceClient) IsBool(ctx context.Context, in *IsBoolReq, opts ...grpc.CallOption) (*IsBoolRes, error) {
	out := new(IsBoolRes)
	err := c.cc.Invoke(ctx, "/track.TrackService/IsBool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackServiceClient) IsValid(ctx context.Context, in *IsValidReq, opts ...grpc.CallOption) (*IsValidRes, error) {
	out := new(IsValidRes)
	err := c.cc.Invoke(ctx, "/track.TrackService/IsValid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrackServiceServer is the server API for TrackService service.
type TrackServiceServer interface {
	CreateUser(context.Context, *CreateUserReq) (*CreateUserRes, error)
	ReadUser(context.Context, *ReadUserReq) (*ReadUserRes, error)
	ListUsers(*ListUsersReq, TrackService_ListUsersServer) error
	CreateActivity(context.Context, *CreateActivityReq) (*CreateActivityRes, error)
	// rpc ReadActivity(ReadActivityReq) returns (ReadActivityRes);
	UpdateActivity(context.Context, *UpdateActivityReq) (*UpdateActivityRes, error)
	ListActivitys(*ListActivitysReq, TrackService_ListActivitysServer) error
	IsBool(context.Context, *IsBoolReq) (*IsBoolRes, error)
	IsValid(context.Context, *IsValidReq) (*IsValidRes, error)
}

// UnimplementedTrackServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTrackServiceServer struct {
}

func (*UnimplementedTrackServiceServer) CreateUser(context.Context, *CreateUserReq) (*CreateUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedTrackServiceServer) ReadUser(context.Context, *ReadUserReq) (*ReadUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadUser not implemented")
}
func (*UnimplementedTrackServiceServer) ListUsers(*ListUsersReq, TrackService_ListUsersServer) error {
	return status.Errorf(codes.Unimplemented, "method ListUsers not implemented")
}
func (*UnimplementedTrackServiceServer) CreateActivity(context.Context, *CreateActivityReq) (*CreateActivityRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateActivity not implemented")
}
func (*UnimplementedTrackServiceServer) UpdateActivity(context.Context, *UpdateActivityReq) (*UpdateActivityRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateActivity not implemented")
}
func (*UnimplementedTrackServiceServer) ListActivitys(*ListActivitysReq, TrackService_ListActivitysServer) error {
	return status.Errorf(codes.Unimplemented, "method ListActivitys not implemented")
}
func (*UnimplementedTrackServiceServer) IsBool(context.Context, *IsBoolReq) (*IsBoolRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsBool not implemented")
}
func (*UnimplementedTrackServiceServer) IsValid(context.Context, *IsValidReq) (*IsValidRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsValid not implemented")
}

func RegisterTrackServiceServer(s *grpc.Server, srv TrackServiceServer) {
	s.RegisterService(&_TrackService_serviceDesc, srv)
}

func _TrackService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/track.TrackService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackServiceServer).CreateUser(ctx, req.(*CreateUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrackService_ReadUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackServiceServer).ReadUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/track.TrackService/ReadUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackServiceServer).ReadUser(ctx, req.(*ReadUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrackService_ListUsers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListUsersReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TrackServiceServer).ListUsers(m, &trackServiceListUsersServer{stream})
}

type TrackService_ListUsersServer interface {
	Send(*ListUsersRes) error
	grpc.ServerStream
}

type trackServiceListUsersServer struct {
	grpc.ServerStream
}

func (x *trackServiceListUsersServer) Send(m *ListUsersRes) error {
	return x.ServerStream.SendMsg(m)
}

func _TrackService_CreateActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateActivityReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackServiceServer).CreateActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/track.TrackService/CreateActivity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackServiceServer).CreateActivity(ctx, req.(*CreateActivityReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrackService_UpdateActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateActivityReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackServiceServer).UpdateActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/track.TrackService/UpdateActivity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackServiceServer).UpdateActivity(ctx, req.(*UpdateActivityReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrackService_ListActivitys_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListActivitysReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TrackServiceServer).ListActivitys(m, &trackServiceListActivitysServer{stream})
}

type TrackService_ListActivitysServer interface {
	Send(*ListActivitysRes) error
	grpc.ServerStream
}

type trackServiceListActivitysServer struct {
	grpc.ServerStream
}

func (x *trackServiceListActivitysServer) Send(m *ListActivitysRes) error {
	return x.ServerStream.SendMsg(m)
}

func _TrackService_IsBool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsBoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackServiceServer).IsBool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/track.TrackService/IsBool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackServiceServer).IsBool(ctx, req.(*IsBoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrackService_IsValid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsValidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackServiceServer).IsValid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/track.TrackService/IsValid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackServiceServer).IsValid(ctx, req.(*IsValidReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TrackService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "track.TrackService",
	HandlerType: (*TrackServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _TrackService_CreateUser_Handler,
		},
		{
			MethodName: "ReadUser",
			Handler:    _TrackService_ReadUser_Handler,
		},
		{
			MethodName: "CreateActivity",
			Handler:    _TrackService_CreateActivity_Handler,
		},
		{
			MethodName: "UpdateActivity",
			Handler:    _TrackService_UpdateActivity_Handler,
		},
		{
			MethodName: "IsBool",
			Handler:    _TrackService_IsBool_Handler,
		},
		{
			MethodName: "IsValid",
			Handler:    _TrackService_IsValid_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListUsers",
			Handler:       _TrackService_ListUsers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListActivitys",
			Handler:       _TrackService_ListActivitys_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/track.proto",
}
